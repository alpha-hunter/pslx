syntax = "proto3";

import "google/protobuf/any.proto";
import "enums.proto";
import "common.proto";

package pslx;


service GenericRPCService {
    rpc SendRequest (GenericRPCRequest)  returns (GenericRPCResponse) {}
    rpc CheckHealth (HealthCheckerRequest) returns (HealthCheckerResponse) {}
}

// the next will be 6
message GenericRPCRequest {
    string timestamp = 1;
    string uuid = 2;
    google.protobuf.Any request_data = 3;
    string message_type = 4;
    Status status = 5;
}

// the next will be 3
message HealthCheckerRequest {
    string server_url = 1;
    bool secure = 2;
}

// the next will be 4
message HealthCheckerResponse {
    string server_url = 1;
    Status server_status = 2;
    float server_qps = 3;
}

// the next will be 6
message GenericRPCResponse {
    string timestamp = 1;
    string request_uuid = 2;
    google.protobuf.Any response_data = 3;
    string message_type = 4;
    Status status = 5;
}

// the next will be 4
message GenericRPCRequestResponsePair {
    string uuid = 1;
    GenericRPCRequest generic_rpc_request = 2;
    GenericRPCResponse generic_rpc_response = 3;
}

// the next will be 6
message InstantMessagingRPCRequest {
    bool is_test = 1;
    InstantMessagingType type = 2;
    string channel_name = 3;
    string webhook_url = 4;
    string message = 5;
}

// the next will be 5
message EmailPRCRequest {
    bool is_test = 1;
    string from_email = 2;
    string to_email = 3;
    string content = 4;
}

// the next will be 6
message RPCIORequest {
    bool is_test = 1;
    StorageType type = 2;
    oneof path {
        string file_name = 3;
        string dir_name = 4;
    }
    map<string, string> params = 5;
}

// the next will be 4
message RPCIOResponse {
    message RPCData {
        oneof raw_data {
            string string_data = 1;
            google.protobuf.Any proto_data = 2;
        }
    }
    message RPCListData {
        repeated RPCData data = 3;
    }
    RPCListData list_data = 4;
    map<string, RPCListData> dict_data = 5;
}

// the next will be 4
message ProtoViewerRPCRequest {
    string proto_file_path = 1;
    string message_type = 2;
    string proto_module = 3;
}


// the next will be 3
message ProtoViewerRPCResponse {
    string proto_content = 1;
    FileInfo file_info = 2;
}

// the next will be 2
message FileViewerRPCRequest {
    string file_path = 1;
}

// the next will be 3
message FileViewerRPCResponse {
    repeated FileInfo files_info = 1;
    repeated FileInfo directories_info = 2;
}

// the next will be 3
message LoggingMessageRequest {
    string message = 1;
    DiskLoggerLevel level = 2;
}
